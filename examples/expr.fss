enum Expr {
    Add(Expr, Expr),
    Sub(Expr, Expr),
    Mul(Expr, Expr),
    Div(Expr, Expr),
    Lit(Number),
}

let eval = { expr ->
    match expr {
        Add(l, r) => eval(l) + eval(r),
        Sub(l, r) => eval(l) - eval(r),
        Mul(l, r) => eval(l) * eval(r),
        Div(l, r) => eval(l) / eval(r),
        Lit(n)    => n,
    }
}

// (1 + 8) * 10
let tree = Mul(Add(Lit(1), Lit(8)), Lit(10))

println(eval(tree))
