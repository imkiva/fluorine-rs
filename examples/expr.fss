enum Expr {
    Add(_, _),
    Sub(_, _),
    Mul(_, _),
    Div(_, _),
    Lit(_),
}

let eval = { expr ->
    match expr {
        Add(l, r) => eval(l) + eval(r),
        Sub(l, r) => eval(l) - eval(r),
        Mul(l, r) => eval(l) * eval(r),
        Div(l, r) => eval(l) / eval(r),
        Lit(n)    => n,
    }
}

let tree = Mul(Add(Lit(1), Lit(8)), Lit(10))

eval(tree)

